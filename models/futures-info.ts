/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Create API keys in your profile and use public API key as username and secret API key as password to authorize.
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/**
 * 
 * @export
 * @interface FuturesInfo
 */
export interface FuturesInfo {
    /**
     * Contract type.
     * @type {string}
     * @memberof FuturesInfo
     */
    contractType: FuturesInfoContractTypeEnum;
    /**
     * Recent asset price adjusted by the value of fair basis.
     * @type {string}
     * @memberof FuturesInfo
     */
    markPrice: string;
    /**
     * Average underlying asset price.
     * @type {string}
     * @memberof FuturesInfo
     */
    indexPrice: string;
    /**
     * Percentage of contract mark value paid after the end of the current funding interval. Returned only if `contract_type` is `perpetual`.
     * @type {string}
     * @memberof FuturesInfo
     */
    fundingRate?: string;
    /**
     * Total quantity of traded futures contracts.
     * @type {string}
     * @memberof FuturesInfo
     */
    openInterest: string;
    /**
     * Timestamp of the next funding. Returned only if `contract_type` is `perpetual`.
     * @type {string}
     * @memberof FuturesInfo
     */
    nextFundingTime?: string;
    /**
     * Estimated value of `funding_rate` in the next funding period calculated at the moment. Returned only if `contract_type` is `perpetual`.
     * @type {string}
     * @memberof FuturesInfo
     */
    indicativeFundingRate?: string;
    /**
     * Time-weighted average over premium indexes from the previous funding to the moment. Used during calculation of `indicative_funding_rate`. Returned only if `contract_type` is `perpetual`. 
     * @type {string}
     * @memberof FuturesInfo
     */
    premiumIndex?: string;
    /**
     * Time-weighted average over premium indexes for **previous** funding period. Used during calculation of `funding_rate` for adjusting it to the deviation of contract market price from the mark price. Returned only if `contract_type` is `perpetual`. 
     * @type {string}
     * @memberof FuturesInfo
     */
    avgPremiumIndex?: string;
    /**
     * Contract interest rate for one funding period.
     * @type {string}
     * @memberof FuturesInfo
     */
    interestRate?: string;
    /**
     * Expected price of closing position on a cash settled contract. Calculated during the last 30 minutes prior to contract expiration â€” until that, equals to `index_price`. Returned only if `contract_type` is `cash_settled`. 
     * @type {string}
     * @memberof FuturesInfo
     */
    indicativeSettlementPrice?: string | null;
    /**
     * Contract expiration date. Returned only if `contract_type` is `cash_settled`.
     * @type {string}
     * @memberof FuturesInfo
     */
    expiry?: string;
    /**
     * Message timestamp.
     * @type {string}
     * @memberof FuturesInfo
     */
    timestamp: string;
}

/**
    * @export
    * @enum {string}
    */
export enum FuturesInfoContractTypeEnum {
    Perpetual = 'perpetual',
    CashSettled = 'cash_settled'
}

