/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Create API keys in your profile and use public API key as username and secret API key as password to authorize.
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/**
 * 
 * @export
 * @interface FuturesConfig
 */
export interface FuturesConfig {
    /**
     * Symbol code.
     * @type {string}
     * @memberof FuturesConfig
     */
    symbol: string;
    /**
     * Multiplier for calculating margin call leverage.
     * @type {string}
     * @memberof FuturesConfig
     */
    marginCallLeverageMul: string;
    /**
     * Multiplier for calculating liquidation leverage.
     * @type {string}
     * @memberof FuturesConfig
     */
    liquidationLeverageMul: string;
    /**
     * Maximum leverage that the user can use for margin trading.
     * @type {string}
     * @memberof FuturesConfig
     */
    maxInitialLeverage: string;
    /**
     * Mode of margin trading.
     * @type {string}
     * @memberof FuturesConfig
     */
    marginMode: string;
    /**
     * Fee for the force closing of the position.
     * @type {string}
     * @memberof FuturesConfig
     */
    forceCloseFee: string;
    /**
     * An indication of whether the margin trading is available.
     * @type {boolean}
     * @memberof FuturesConfig
     */
    enabled: boolean;
    /**
     * An indication of whether any positions comply with the parameters (including not yet opened).
     * @type {boolean}
     * @memberof FuturesConfig
     */
    active: boolean;
    /**
     * An absolute maximum that a position value can reach. Returns only if the risk limit exists.
     * @type {string}
     * @memberof FuturesConfig
     */
    limitBase?: string;
    /**
     * Power which determines the influence of the leverage on the risk limit value. Returns only if the risk limit exists.
     * @type {string}
     * @memberof FuturesConfig
     */
    limitPower?: string;
    /**
     * Position leverage below which the risk limit is not calculated. Returns only if the risk limit exists.
     * @type {string}
     * @memberof FuturesConfig
     */
    unlimitedThreshold?: string;
}
