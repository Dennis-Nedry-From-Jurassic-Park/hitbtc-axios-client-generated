/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Create API keys in your profile and use public API key as username and secret API key as password to authorize.
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/**
 * 
 * @export
 * @interface InstantExchange
 */
export interface InstantExchange {
    /**
     * Transfer identifier.
     * @type {number}
     * @memberof InstantExchange
     */
    id: number;
    /**
     * Exchange transaction identifier.
     * @type {string}
     * @memberof InstantExchange
     */
    exchangeTxId: string;
    /**
     * Bank payout transaction identifier.
     * @type {string}
     * @memberof InstantExchange
     */
    bankPayoutTxId: string;
    /**
     * Source currency code.
     * @type {string}
     * @memberof InstantExchange
     */
    fromCurrency: string;
    /**
     * Target currency code.
     * @type {string}
     * @memberof InstantExchange
     */
    toCurrency: string;
    /**
     * Source amount.
     * @type {string}
     * @memberof InstantExchange
     */
    fromAmount: string;
    /**
     * Target amount.
     * @type {string}
     * @memberof InstantExchange
     */
    toAmount: string;
    /**
     * Exchange fee.
     * @type {string}
     * @memberof InstantExchange
     */
    exchangeFee: string;
    /**
     * Bank fee.
     * @type {string}
     * @memberof InstantExchange
     */
    bankFee: string;
    /**
     * Blockchain network fee.
     * @type {string}
     * @memberof InstantExchange
     */
    networkFee: string;
    /**
     * Broker fee.
     * @type {string}
     * @memberof InstantExchange
     */
    brokerFee: string;
    /**
     * Source wallet address.
     * @type {string}
     * @memberof InstantExchange
     */
    fromAddress: string;
    /**
     * Target wallet address.
     * @type {string}
     * @memberof InstantExchange
     */
    toAddress: string;
    /**
     * Rate at which a source currency was exchanged for a target currency.
     * @type {string}
     * @memberof InstantExchange
     */
    exchangeRate: string;
    /**
     * Payin hash.
     * @type {string}
     * @memberof InstantExchange
     */
    payinHash?: string | null;
    /**
     * Payout hash.
     * @type {string}
     * @memberof InstantExchange
     */
    payoutHash?: string | null;
    /**
     * Payin offchain identifier.
     * @type {string}
     * @memberof InstantExchange
     */
    payinOffchainId?: string | null;
    /**
     * Payout offchain identifier.
     * @type {string}
     * @memberof InstantExchange
     */
    payoutOffchainId?: string | null;
    /**
     * An indication of whether the transaction is offchain.
     * @type {boolean}
     * @memberof InstantExchange
     */
    isOffchain: boolean;
    /**
     * Date and time of the transaction creation.
     * @type {string}
     * @memberof InstantExchange
     */
    createdAt: string;
    /**
     * Date and time of the last transaction update.
     * @type {string}
     * @memberof InstantExchange
     */
    updatedAt: string;
    /**
     * Transaction type.
     * @type {string}
     * @memberof InstantExchange
     */
    type: InstantExchangeTypeEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum InstantExchangeTypeEnum {
    MARKET = 'MARKET',
    FIXED = 'FIXED'
}

